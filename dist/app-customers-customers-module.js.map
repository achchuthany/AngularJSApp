{"version":3,"sources":["webpack:///./src/app/customers/customers-card.component.css","webpack:///./src/app/customers/customers-card.component.html","webpack:///./src/app/customers/customers-card.component.ts","webpack:///./src/app/customers/customers-grid.component.css","webpack:///./src/app/customers/customers-grid.component.html","webpack:///./src/app/customers/customers-grid.component.ts","webpack:///./src/app/customers/customers-routing.module.ts","webpack:///./src/app/customers/customers.component.html","webpack:///./src/app/customers/customers.component.ts","webpack:///./src/app/customers/customers.module.ts"],"names":[],"mappings":"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","file":"app-customers-customers-module.js","sourcesContent":["module.exports = \".card-container {\\r\\n    width:85%;\\r\\n}\\r\\n\\r\\n.card {\\r\\n    background-color:#fff;\\r\\n    border: 1px solid #d4d4d4;\\r\\n    height:120px;\\r\\n    margin-bottom: 20px;\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n.card-header {\\r\\n    background-color:#027FF4;\\r\\n    font-size:14pt;\\r\\n    color:white;\\r\\n    padding:5px;\\r\\n    width:100%;\\r\\n}\\r\\n\\r\\n.card-close {\\r\\n    color: white;\\r\\n    font-weight:bold;\\r\\n    margin-right:5px;\\r\\n}\\r\\n\\r\\n.card-body {\\r\\n    padding-left: 5px;\\r\\n}\\r\\n\\r\\n.card-body-left {\\r\\n    margin-top: -5px;\\r\\n}\\r\\n\\r\\n.card-body-right {\\r\\n    margin-left: 20px;\\r\\n    margin-top: 2px;\\r\\n}\\r\\n\\r\\n.card-body-content {\\r\\n    width: 100px;\\r\\n}\\r\\n\\r\\n.card-image {\\r\\n    height:50px;width:50px;margin-top:10px;\\r\\n}\\r\\n\\r\\n.white {\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.white:hover {\\r\\n    color: white;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row card-container\\\">\\r\\n        <div class=\\\"col-sm-6 col-md-4 col-lg-3\\\" *ngFor=\\\"let customer of customers;trackBy:trackbyService.customer\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-header\\\" style=\\\"background-color:rgb(0, 141, 219);\\\">\\r\\n                    <a [routerLink]=\\\"['/waterTanks',customer.id,'details']\\\" class=\\\"white\\\">\\r\\n                        {{customer.firstName | capitalize }} \\r\\n                    </a>\\r\\n                    <a [routerLink]=\\\"['/waterTanks',customer.id,'edit']\\\">\\r\\n                        <i title=\\\"Edit\\\"  \\r\\n                           class=\\\"pull-right glyphicon glyphicon-edit edit-icon white\\\"></i>\\r\\n                    </a>\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"clearfix\\\">\\r\\n                        <div class=\\\"pull-left card-body-left\\\">\\r\\n                            <a href=\\\"#\\\" class=\\\"white\\\">\\r\\n                                <img src=\\\"assets/images/{{customer.gender | lowercase}}.png\\\" class=\\\"card-image\\\" />\\r\\n                            </a>\\r\\n                        </div>\\r\\n                        <div class=\\\"pull-left card-body-right\\\">\\r\\n                            <div class=\\\"card-body-content\\\">{{ customer.lastName | capitalize }} , {{customer.city | trim }}, {{customer.state.name}}</div>\\r\\n                            <!-- <a [routerLink]=\\\"['/customers',customer.id,'orders']\\\">View Details</a> -->\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"card-header\\\" style=\\\"background-color:#222222;font-size: 14px;\\\">\\r\\n                    <a class=\\\"white\\\">\\r\\n                        {{customer.orderTotal | capitalize }}  m<sup>3</sup>\\r\\n                    </a>\\r\\n                   \\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"!customers.length\\\">\\r\\n            No Records Found\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, Input, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nimport { ICustomer } from '../shared/interfaces';\r\nimport { TrackByService } from '../core/services/trackby.service';\r\n\r\n@Component({\r\n  selector: 'cm-customers-card',\r\n  templateUrl: './customers-card.component.html',\r\n  styleUrls: [ './customers-card.component.css' ],\r\n  // When using OnPush detectors, then the framework will check an OnPush\r\n  // component when any of its input properties changes, when it fires\r\n  // an event, or when an observable fires an event ~ Victor Savkin (Angular Team)\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CustomersCardComponent implements OnInit {\r\n\r\n  @Input() customers: ICustomer[] = [];\r\n\r\n  constructor(public trackbyService: TrackByService) { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n}\r\n\r\n","module.exports = \".grid-container  div {\\r\\n    padding-left: 0px;\\r\\n}\\r\\n\\r\\n.grid-container td {\\r\\n    vertical-align: middle;\\r\\n}\\r\\n\\r\\n.grid-image {\\r\\n    height:50px;width:50px;margin-top:10px;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row grid-container\\\">\\r\\n        <div class=\\\"col-md-10\\\">\\r\\n            <div class=\\\"table\\\">\\r\\n                <table class=\\\"table table-striped table-hover\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>&nbsp;</th>\\r\\n                            <th cmSortBy=\\\"firstName\\\" (sorted)=\\\"sort($event)\\\">Tank ID</th>\\r\\n                            <th cmSortBy=\\\"lastName\\\" (sorted)=\\\"sort($event)\\\">Managed By</th>\\r\\n                            <th cmSortBy=\\\"address\\\" (sorted)=\\\"sort($event)\\\">Address</th>\\r\\n                            <th cmSortBy=\\\"city\\\" (sorted)=\\\"sort($event)\\\">City</th>\\r\\n                            <th cmSortBy=\\\"state.name\\\" (sorted)=\\\"sort($event)\\\">District</th>\\r\\n                            <!-- Or you can do this directly rather than using sort-by directive -->\\r\\n                            <th (click)=\\\"sort('orderTotal')\\\">Water Level</th>\\r\\n                            <th>&nbsp;</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let customer of customers;trackBy:trackbyService.customer\\\">\\r\\n                            <td><img src=\\\"assets/images/{{ customer.gender | lowercase }}.png\\\"\\r\\n                                    class=\\\"grid-image\\\" alt=\\\"Customer Image\\\" /></td>\\r\\n                            <td><a [routerLink]=\\\"['/waterTanks',customer.id,'details']\\\">{{ customer.firstName | capitalize }}</a></td>\\r\\n                            <td>{{ customer.lastName | capitalize }}</td>\\r\\n                            <td>{{ customer.address }}</td>\\r\\n                            <td>{{ customer.city | trim }}</td>\\r\\n                            <td>{{ customer.state.name }}</td>\\r\\n                            <td>{{ customer.orderTotal }}</td>\\r\\n                            <td><a [routerLink]=\\\"['/waterTanks',customer.id,'orders']\\\">View Water Level</a></td>\\r\\n                        </tr>\\r\\n                        <tr *ngIf=\\\"!customers.length\\\">\\r\\n                            <td>&nbsp;</td>\\r\\n                            <td colspan=\\\"7\\\">No water tank Found</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, Input, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nimport { SorterService } from '../core/services/sorter.service';\r\nimport { TrackByService } from '../core/services/trackby.service';\r\nimport { ICustomer } from '../shared/interfaces';\r\n\r\n@Component({\r\n  selector: 'cm-customers-grid',\r\n  templateUrl: './customers-grid.component.html',\r\n  styleUrls: ['./customers-grid.component.css'],\r\n  // When using OnPush detectors, then the framework will check an OnPush\r\n  // component when any of its input properties changes, when it fires\r\n  // an event, or when an observable fires an event ~ Victor Savkin (Angular Team)\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CustomersGridComponent implements OnInit {\r\n\r\n  @Input() customers: ICustomer[] = [];\r\n\r\n  constructor(private sorterService: SorterService, public trackbyService: TrackByService) { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  sort(prop: string) {\r\n    this.sorterService.sort(this.customers, prop);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { CustomersComponent } from './customers.component';\r\nimport { CustomersCardComponent } from './customers-card.component';\r\nimport { CustomersGridComponent } from './customers-grid.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: CustomersComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forChild(routes) ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class CustomersRoutingModule {\r\n  static components = [ CustomersComponent, CustomersCardComponent, CustomersGridComponent ];\r\n}\r\n","module.exports = \"<div class=\\\"customers view indent\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n        <header>\\r\\n            <h3>\\r\\n                <span class=\\\"glyphicon glyphicon-tint\\\"></span>\\r\\n                {{ title }}\\r\\n            </h3>\\r\\n        </header>\\r\\n        <br />\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-10\\\">\\r\\n                <div class=\\\"navbar\\\">\\r\\n                    <ul class=\\\"nav navbar-nav\\\">\\r\\n                        <li class=\\\"toolbar-item\\\">\\r\\n                            <a (click)=\\\"changeDisplayMode(displayModeEnum.Card)\\\" [class.active]=\\\"displayMode === displayModeEnum.Card\\\">\\r\\n                                <span class=\\\"glyphicon glyphicon-th-large\\\"></span> Card View\\r\\n                            </a>\\r\\n                        </li>\\r\\n                        <li class=\\\"toolbar-item\\\">\\r\\n                            <a (click)=\\\"changeDisplayMode(displayModeEnum.Grid)\\\" [class.active]=\\\"displayMode === displayModeEnum.Grid\\\">\\r\\n                                <span class=\\\"glyphicon glyphicon-align-justify\\\"></span> List View\\r\\n                            </a>\\r\\n                        </li>\\r\\n                        <li class=\\\"toolbar-item\\\">\\r\\n                            <a (click)=\\\"changeDisplayMode(displayModeEnum.Map)\\\" [class.active]=\\\"displayMode === displayModeEnum.Map\\\">\\r\\n                                <span class=\\\"glyphicon glyphicon-map-marker\\\"></span> Map View\\r\\n                            </a>\\r\\n                        </li>\\r\\n                        <li class=\\\"toolbar-item\\\">\\r\\n                            <a routerLink=\\\"/waterTanks/0/edit\\\">\\r\\n                                <span class=\\\"glyphicon glyphicon-plus\\\"></span> New Water Tank\\r\\n                            </a>\\r\\n                        </li>\\r\\n                    </ul>\\r\\n                    <cm-filter-textbox class=\\\"navbar-right\\\"\\r\\n                     (changed)=\\\"filterChanged($event)\\\"></cm-filter-textbox>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        \\r\\n        <cm-customers-card \\r\\n          [customers]=\\\"filteredCustomers\\\" \\r\\n          [hidden]=\\\"displayMode !== displayModeEnum.Card\\\"></cm-customers-card>\\r\\n    \\r\\n        <cm-customers-grid \\r\\n          [customers]=\\\"filteredCustomers\\\" \\r\\n          [hidden]=\\\"displayMode !== displayModeEnum.Grid\\\"></cm-customers-grid>\\r\\n\\r\\n        <cm-map *ngIf=\\\"filteredCustomers.length\\\" \\r\\n            [zoom]=\\\"6\\\" \\r\\n            [enabled]=\\\"displayMode === displayModeEnum.Map\\\" \\r\\n            [hidden]=\\\"displayMode !== displayModeEnum.Map\\\">\\r\\n          <cm-map-point \\r\\n            *ngFor=\\\"let customer of filteredCustomers\\\" \\r\\n            [latitude]=\\\"customer.latitude\\\" \\r\\n            [longitude]=\\\"customer.longitude\\\"\\r\\n            [markerText]=\\\"'<h3>' + customer.firstName + ' => ' + customer.orderTotal + ' m<sup>3</sup></a></h3>' + customer.city + ', ' + customer.state.name\\\"></cm-map-point>\\r\\n        </cm-map>\\r\\n\\r\\n        <cm-pagination\\r\\n            [totalItems]=\\\"totalRecords\\\" \\r\\n            [pageSize]=\\\"pageSize\\\" \\r\\n            (pageChanged)=\\\"pageChanged($event)\\\"></cm-pagination>\\r\\n          \\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { DataService } from '../core/services/data.service';\r\nimport { ICustomer, IPagedResults } from '../shared/interfaces';\r\nimport { FilterService } from '../core/services/filter.service';\r\nimport { LoggerService } from '../core/services/logger.service';\r\n\r\n@Component({\r\n  selector: 'cm-customers',\r\n  templateUrl: './customers.component.html'\r\n})\r\nexport class CustomersComponent implements OnInit {\r\n\r\n  title: string;\r\n  filterText: string;\r\n  customers: ICustomer[] = [];\r\n  filteredCustomers: ICustomer[] = [];\r\n  displayMode: DisplayModeEnum;\r\n  displayModeEnum = DisplayModeEnum;\r\n  totalRecords = 0;\r\n  pageSize = 10;\r\n\r\n  constructor(private dataService: DataService,\r\n    private filterService: FilterService,\r\n    private logger: LoggerService) { }\r\n\r\n  ngOnInit() {\r\n    this.title = 'Water Tanks';\r\n    this.filterText = 'Filter Water Tanks:';\r\n    this.displayMode = DisplayModeEnum.Card;\r\n\r\n    this.getCustomersPage(1);\r\n  }\r\n\r\n  changeDisplayMode(mode: DisplayModeEnum) {\r\n      this.displayMode = mode;\r\n  }\r\n\r\n  pageChanged(page: number) {\r\n    this.getCustomersPage(page);\r\n  }\r\n\r\n  getCustomersPage(page: number) {\r\n    this.dataService.getCustomersPage((page - 1) * this.pageSize, this.pageSize)\r\n        .subscribe((response: IPagedResults<ICustomer[]>) => {\r\n          this.customers = this.filteredCustomers = response.results;\r\n          this.totalRecords = response.totalRecords;\r\n        },\r\n        (err: any) => this.logger.log(err),\r\n        () => this.logger.log('getCustomersPage() retrieved water tanks for page: ' + page));\r\n  }\r\n\r\n  filterChanged(data: string) {\r\n    if (data && this.customers) {\r\n        data = data.toUpperCase();\r\n        const props = ['firstName', 'lastName', 'city', 'state.name'];\r\n        this.filteredCustomers = this.filterService.filter<ICustomer>(this.customers, data, props);\r\n    } else {\r\n      this.filteredCustomers = this.customers;\r\n    }\r\n  }\r\n}\r\n\r\nenum DisplayModeEnum {\r\n  Card = 0,\r\n  Grid = 1,\r\n  Map = 2\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { CustomersRoutingModule } from './customers-routing.module';\r\n\r\n@NgModule({\r\n  imports: [CustomersRoutingModule, SharedModule],\r\n  declarations: [CustomersRoutingModule.components]\r\n})\r\nexport class CustomersModule { }\r\n"],"sourceRoot":""}